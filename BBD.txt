Hi [Dare Team],

Thanks a lot for your response!

To clarify, the points I shared were just a proposed solution. My primary intention was to explore potential ways to accelerate the UI build process and optimize the turnaround time for deploying UI changes.

Regarding your comment on the first proposal, I would like to understand a bit more about why itâ€™s mandatory for the RTL teams to be aware of every UI release build. In my suggestion, we could design the wibtp-web Jenkins job to automatically search for the latest version of the WAR file from the artifact. If no artifact is found, the system could then trigger the UI build asynchronously. This approach would also apply to the UI job, where it would look for the BE JAR artifact before triggering the UI build. This should help streamline the process and reduce any dependency on manual communication.

Again, the key goal here is to optimize the turnaround time for UI builds so that we can deploy UI changes faster.

Additionally, I wanted to mention that a similar mechanism was initially followed by OSMP. Over time, however, UI was moved to its own static server, eliminating the need to trigger the entire OSMP build.

Looking forward to your thoughts!
